# Javascript Node CircleCI 2.1 configuration file
version: 2.1
orbs:
  heroku: circleci/heroku@1.2.3
jobs:
  build:
    working_directory: ~/natours
    docker:
      - image: circleci/node:10.16.3

    steps:
      - checkout
      - run:
          name: update-npm
          command: 'sudo npm install -g npm@latest'
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: install-npm-wee
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      - run:
          name: build-site-script-file
          command: 'npm run build:js'
          
  install:
    description: |
      Download and install the Heroku CLI. Will be skipped if the CLI is already installed in the system.
    steps:
      - run:
          command: |
            if [[ $(command -v heroku) == "" ]]; then
            curl https://cli-assets.heroku.com/install.sh | sh
            else
            echo "Heroku is already installed. No operation was performed."
            fi
          name: Install Heroku CLI (If not installed)
  deploy:
    description: |
      Push a Docker image to the Heroku Docker registry.
    docker:
      - image: circleci/buildpack-deps:trusty
    working_directory: ~/natours
    parameters:
      api-key:
        default: HEROKU_API_KEY
        description: The name of the environment variable containing your Heroku API Key.
        type: env_var_name
      app-name:
        default: $HEROKU_APP_NAME
        description: >-
          The name of your Heroku App. For backwards compatibility the literal value
          `$HEROKU_APP_NAME` is the default, so you can easily use this command by
          setting an environment variable called HEROKU_APP_NAME
        type: string
      no_output_timeout:
        default: 10m
        description: >-
          Allows you to specify the no_output_timeout for the `git push` to heroku.
          Defaults to 10m.
        type: string
      process-types:
        default: ''
        description: Process types.
        type: string
      recursive:
        default: false
        description: Push all Dockerfiles in the directory to Heroku.
        type: boolean
    steps:
      - run:
          command: 'heroku container:login'
          name: Login to Heroku Docker image registry
      - run:
          command: >
            heroku container:push -a <<parameters.app-name>> \
            <<# parameters.recursive >>--recursive<</ parameters.recursive >>
            <<# parameters.process-types>><<parameters.process-types>><</
            parameters.process-types>>
          name: Push Docker image to Heroku
          no_output_timeout: << parameters.no_output_timeout >>
  
##    - run:
##        name: Deploy on Heroku Login
##        command: heroku login
##        command: git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master

    
    
workflows:
  version: 2
  build-deploy:
    jobs:
##    - build
      - install
      - deploy:
##        requires:
##          - build
